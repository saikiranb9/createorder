{
  "swagger": "2.0",
  "info": {
    "description": "REST API",
    "version": "1.0",
    "title": "Product Details REST API",
    "contact": {
      "name": "MSA"
    },
    "license": {
      "name": "Apache License Version 2.0",
      "url": "https://github.com/springfox/springfox/blob/master/LICENSE"
    }
  },
  "host": "develop-msa.gcp.atd-us.com/product",
  "basePath": "/",
  "tags": [
    {
      "name": "redis-controller",
      "description": "Redis Controller"
    },
    {
      "name": "web-mvc-links-handler",
      "description": "Web Mvc Links Handler"
    },
    {
      "name": "operation-handler",
      "description": "Operation Handler"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    {
      "name": "product-rest-controller",
      "description": "Product Rest Controller"
    }
  ],
  "paths": {
    "/actuator": {
      "get": {
        "tags": [
          "web-mvc-links-handler"
        ],
        "summary": "links",
        "operationId": "linksUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Map«string,Link»"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/env": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingPOST",
        "consumes": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/actuator/env/{toMatch}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/health/{component}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/health/{component}/{instance}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/httptrace": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/loggers": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/loggers/{name}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingPOST_1",
        "consumes": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/prometheus": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain;version=0.0.4;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/catalogs/orgId/{orgId}": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for Catalog attribute, provided Organization ID, Attribute Name, Attribute Value",
        "description": "JSON Supported",
        "operationId": "findByOrgIDAndAttrNameValueUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "The Organization ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attributeName",
            "in": "query",
            "description": "The Attribute Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributeValue",
            "in": "query",
            "description": "The Attribute Value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/dcitemattributes/product/{productNumber}/organizationId/{organizationId}": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns DC information regarding a product",
        "description": "JSON Supported",
        "operationId": "findDCItemAttributesByProductNumberAndOrganizationIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productNumber",
            "in": "path",
            "description": "Product Number",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DCItemAttributes"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Product Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/findByInventoryItemIDAndOrgID/{id}/{orgID}": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for a Product, provided a Inventory Item ID and Organization ID",
        "description": "JSON Supported",
        "operationId": "findByInventoryItemIDAndOrgIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The inventory Item ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orgID",
            "in": "path",
            "description": "The Organization ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/findByInventoryItemIDAndOrgID/{id}/{orgID}/catalog": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for Catalog attributes, provided a Inventory Item ID and Organization ID",
        "description": "JSON Supported",
        "operationId": "findCatalogByInventoryItemIDAndOrgIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The inventory Item ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orgID",
            "in": "path",
            "description": "The Organization ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/findByInventoryItemIDAndOrgID/{id}/{orgID}/category": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for Category attributes, provided a Inventory Item ID and Organization ID",
        "description": "JSON Supported",
        "operationId": "findCategoryByInventoryItemIDAndOrgIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The inventory Item ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orgID",
            "in": "path",
            "description": "The Organization ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/findByInventoryItemIDAndOrgIDAndAttrName/{id}/{orgID}/catalog": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for Catalog attribute, provided a Inventory Item ID , Organization ID, Attribute Name and Attribute Value",
        "description": "JSON Supported",
        "operationId": "findByOrgIDAndInventoryItemIDAndAttrNameAndAttrValueUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orgID",
            "in": "path",
            "description": "The Organization ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The inventory Item ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attributeName",
            "in": "query",
            "description": "The Attribute Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/findByProductNumberAndOrgID/{number}/{orgID}": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for a Product, provided a Product Number and Organization ID",
        "description": "JSON Supported",
        "operationId": "findByProductNumberAndOrgIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The Product Number.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgID",
            "in": "path",
            "description": "The Organization ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/findByProductNumberAndOrgID/{number}/{orgID}/catalog": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for Catalog attributes, provided a product number and organization ID",
        "description": "JSON Supported",
        "operationId": "findCatalogByProductNumberAndOrgIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The Product Number.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgID",
            "in": "path",
            "description": "The Organization ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/findByProductNumberAndOrgID/{number}/{orgID}/category": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for Category attributes, provided a product number and organization ID",
        "description": "JSON Supported",
        "operationId": "findCategoryByProductNumberAndOrgIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The Product Number.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgID",
            "in": "path",
            "description": "The Organization ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/findProductGroupsByProductNumberAndOperatingUnitID/{operatingID}": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns product group IDs that belongs to the product numbers requested",
        "description": "JSON Supported",
        "operationId": "findProductGroupsByProductNumberAndOperatingUnitIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingID",
            "in": "path",
            "description": "The Operating Unit ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "productNumbers",
            "in": "query",
            "description": "List of Product Numbers",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductByProductGroupResponse"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/findProductNumbersByProductGroupIDAndOperatingUnitID/{productGroupID}/{operatingID}": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns product numbers that belongs to the product group id requested",
        "description": "JSON Supported",
        "operationId": "findProductNumbersByProductGroupIDAndOperatingUnitIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productGroupID",
            "in": "path",
            "description": "Product Group ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "operatingID",
            "in": "path",
            "description": "The Operating Unit ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductGroupRelation"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns product groups",
        "description": "JSON Supported",
        "operationId": "findProductGroupsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductGroup"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/productxrefs": {
      "post": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Returns all information for a Product, provided a Product Number and Organization ID",
        "description": "JSON Supported",
        "operationId": "findByProductXrefNumberUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "itemDetailsRequest",
            "description": "itemDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/redis": {
      "delete": {
        "tags": [
          "redis-controller"
        ],
        "summary": "getOrdersByOrderNumber",
        "operationId": "getOrdersByOrderNumberUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/xref": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "findByCustomerNumberAndCustomerPartNumber",
        "operationId": "findByCustomerNumberAndCustomerPartNumberUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerIDKey",
            "in": "query",
            "description": "Customer Number",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "customerPrdKey",
            "in": "query",
            "description": "Customer Part Number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Mono«ItemCrossReferences»"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProductGroup": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "orgID": {
          "type": "integer",
          "format": "int64"
        },
        "productGroupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Category": {
      "properties": {
        "attrName": {
          "type": "string"
        },
        "attrValue": {
          "type": "string"
        },
        "categoryID": {
          "type": "integer",
          "format": "int64"
        },
        "categorySetID": {
          "type": "integer",
          "format": "int64"
        },
        "categorySetName": {
          "type": "string"
        },
        "categoryUniqueID": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabledFlag": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inventoryItemID": {
          "type": "integer",
          "format": "int64"
        },
        "orgID": {
          "type": "integer",
          "format": "int64"
        },
        "organizationID": {
          "type": "integer",
          "format": "int64"
        },
        "structureID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Flux«ProductByProductGroupResponse»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ModelAndView": {
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "Product": {
      "properties": {
        "dimensionUOMCode": {
          "type": "string"
        },
        "fet": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        },
        "inventoryItemID": {
          "type": "integer",
          "format": "int64"
        },
        "itemCatalogGroupID": {
          "type": "integer",
          "format": "int64"
        },
        "itemDesc": {
          "type": "string"
        },
        "itemOrgID": {
          "type": "integer",
          "format": "int64"
        },
        "longDesc": {
          "type": "string"
        },
        "orgID": {
          "type": "integer",
          "format": "int64"
        },
        "organizationID": {
          "type": "integer",
          "format": "int64"
        },
        "primaryUOMCode": {
          "type": "string"
        },
        "productNumber": {
          "type": "string"
        },
        "samsItemNumber": {
          "type": "string"
        },
        "searsItemNumber": {
          "type": "string"
        },
        "splDIS": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "systemZNumber": {
          "type": "string"
        },
        "teslaItemNumber": {
          "type": "string"
        },
        "unitHeight": {
          "type": "number",
          "format": "double"
        },
        "unitLength": {
          "type": "number",
          "format": "double"
        },
        "unitWeight": {
          "type": "number",
          "format": "double"
        },
        "unitWidth": {
          "type": "number",
          "format": "double"
        },
        "vendorNumber": {
          "type": "string"
        },
        "walmartItemNumber": {
          "type": "string"
        },
        "weightUOMCode": {
          "type": "string"
        }
      }
    },
    "ErrorDetails": {
      "properties": {
        "details": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ItemCrossReferences": {
      "properties": {
        "customerName": {
          "type": "string"
        },
        "customerNumber": {
          "type": "integer",
          "format": "int64"
        },
        "customerPartNumber": {
          "type": "string"
        },
        "dbName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inventoryItemId": {
          "type": "integer",
          "format": "int64"
        },
        "orgId": {
          "type": "integer",
          "format": "int64"
        },
        "organizationId": {
          "type": "integer",
          "format": "int64"
        },
        "productNo": {
          "type": "string"
        },
        "xreferenceId": {
          "type": "string"
        }
      }
    },
    "ProductGroupResponse": {
      "properties": {
        "inventoryItemID": {
          "type": "integer",
          "format": "int64"
        },
        "productNumber": {
          "type": "string"
        }
      }
    },
    "ProductByProductGroupResponse": {
      "properties": {
        "productGroupIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "productNumber": {
          "type": "string"
        }
      }
    },
    "DCItemAttributes": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "inventoryItemId": {
          "type": "integer",
          "format": "int64"
        },
        "inventoryPlanningLevel": {
          "type": "integer",
          "format": "int64"
        },
        "itemBlockStatus": {
          "type": "string"
        },
        "nonStockFlag": {
          "type": "string"
        },
        "orgCode": {
          "type": "string"
        },
        "organizationId": {
          "type": "integer",
          "format": "int64"
        },
        "productNumber": {
          "type": "string"
        },
        "sellingInactiveFlag": {
          "type": "string"
        }
      }
    },
    "Mono«Product»": {},
    "Mono«DCItemAttributes»": {},
    "Flux«ProductGroup»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ModelMap": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Map«string,Link»": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/Link"
      }
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      }
    },
    "Catalog": {
      "properties": {
        "attrName": {
          "type": "string"
        },
        "attrValue": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inventoryItemID": {
          "type": "integer",
          "format": "int64"
        },
        "itemCatalogGroupID": {
          "type": "integer",
          "format": "int64"
        },
        "itemCatalogID": {
          "type": "string"
        },
        "orgID": {
          "type": "integer",
          "format": "int64"
        },
        "organizationID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Mono«ProductGroupRelation»": {},
    "Flux«Catalog»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProductGroupRelation": {
      "properties": {
        "id": {
          "type": "string"
        },
        "orgID": {
          "type": "integer",
          "format": "int64"
        },
        "productGroupID": {
          "type": "integer",
          "format": "int64"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductGroupResponse"
          }
        }
      }
    },
    "ItemDetailsRequest": {
      "properties": {
        "customer": {
          "type": "string"
        },
        "itemNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orgId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Flux«Product»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Mono«ItemCrossReferences»": {},
    "Flux«Category»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Link": {
      "properties": {
        "href": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    }
  }
}