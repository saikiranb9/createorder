{
  "swagger": "2.0",
  "info": {
    "description": "REST API",
    "version": "1.0",
    "title": "Customer-Location Details REST API",
    "contact": {
      "name": "MSA"
    },
    "license": {
      "name": "Apache License Version 2.0",
      "url": "https://github.com/springfox/springfox/blob/master/LICENSE"
    }
  },
  "host": "https://prod-msa.gcp.atd-us.com",
  "basePath": "/customerlocation",
  "tags": [
    {
      "name": "customer-validation-rest-controller",
      "description": "Customer Validation Rest Controller"
    },
    {
      "name": "location-details-rest-controller",
      "description": "Location Details Rest Controller"
    },
    {
      "name": "web-mvc-links-handler",
      "description": "Web Mvc Links Handler"
    },
    {
      "name": "operation-handler",
      "description": "Operation Handler"
    },
    {
      "name": "customer-details-rest-controller",
      "description": "Customer Details Rest Controller"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    }
  ],
  "paths": {
    "/actuator": {
      "get": {
        "tags": [
          "web-mvc-links-handler"
        ],
        "summary": "links",
        "operationId": "linksUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Map«string,Link»"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/env": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingPOST",
        "consumes": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/actuator/env/{toMatch}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/health/{component}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/health/{component}/{instance}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/httptrace": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/loggers": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/loggers/{name}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingPOST_1",
        "consumes": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/prometheus": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain;version=0.0.4;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer/findByCustomerID/{id}": {
      "get": {
        "tags": [
          "customer-details-rest-controller"
        ],
        "summary": "Returns all information for a given customer, provided a Customer ID",
        "description": "JSON Supported",
        "operationId": "findByCustomerIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the existing customer.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/customer/findByCustomerID/{id}/relation": {
      "get": {
        "tags": [
          "customer-details-rest-controller"
        ],
        "summary": "Returns Customer Relation Data provided a Customer ID",
        "description": "JSON/ XML Supported",
        "operationId": "findCustomerRelationByCustomerIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the existing customer.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerRelation"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/customer/findByCustomerNumber/{number}": {
      "get": {
        "tags": [
          "customer-details-rest-controller"
        ],
        "summary": "Returns all information for a given customer, provided a Customer Number",
        "description": "JSON Supported",
        "operationId": "findByCustomerNumberUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The Customer Number of the existing customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/customer/findByRelatedCustomerID/{id}/relation": {
      "get": {
        "tags": [
          "customer-details-rest-controller"
        ],
        "summary": "Returns Customer Relation Data provided a Customer ID",
        "description": "JSON/ XML Supported",
        "operationId": "findCustomerRelationByRelatedCustomerIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Related Customer ID of the customer.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerRelation"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/customer/v2/{customerId}/siteuse/{siteUseCode}": {
      "get": {
        "tags": [
          "customer-details-rest-controller"
        ],
        "summary": "Returns the Site Use data provided a Customer ID and Site Use Code",
        "description": "JSON Supported",
        "operationId": "findSiteUseFluxByCustomerIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Customer ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteUseCode",
            "in": "path",
            "description": "The Site Use Code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteUse"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/customer/{customerId}/siteuse/{siteUseCode}": {
      "get": {
        "tags": [
          "customer-details-rest-controller"
        ],
        "summary": "Returns the Site Use data provided a Customer ID and Site Use Code",
        "description": "JSON Supported",
        "operationId": "findSiteUseByCustomerIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Customer ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteUseCode",
            "in": "path",
            "description": "The Site Use Code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteUse"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/customervalidation/customernumber/{customernumber}/zipcode/{zipcode}": {
      "get": {
        "tags": [
          "customer-validation-rest-controller"
        ],
        "summary": "Returns validation(Boolean) for a given customer, provided a Customer Number and Zip Code ",
        "description": "JSON Supported",
        "operationId": "validateCustomerByCustomerNumberAndZipCodeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customernumber",
            "in": "path",
            "description": "The customer number of the existing customer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "zipcode",
            "in": "path",
            "description": "The zipcode of the existing customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependency of Customer Validation",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Customer validation requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with Customer Number and Zipcode",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Customer Validation",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/location/get": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "getLocationDetails",
        "operationId": "getLocationDetailsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributeName",
            "in": "query",
            "description": "location attribute name",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributeValue",
            "in": "query",
            "description": "location attribute value",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flux«SiteUseAttribute»"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Customer Location requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/get/{location}": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns information for a given location",
        "description": "JSON",
        "operationId": "getLocationDetailsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location of the existing customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/get/{location}/contact": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns the contact information for given location",
        "description": "JSON Supported",
        "operationId": "getContactDetailsByLocationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location of the existing customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactInfo"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/get/{location}/ecommInfo": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns the ecomm related information for given location",
        "description": "JSON Supported",
        "operationId": "getEcommInfoByLocationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location of the existing customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EcommInfo"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/get/{location}/siteUse": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns the Site Use related information for given location",
        "description": "JSON Supported",
        "operationId": "getSiteUseInfoByLocationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location of the existing customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteUse"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/get/{location}/siteUseAttr": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns the Site Use Attribute related information for given location",
        "description": "JSON Supported",
        "operationId": "getSiteUseAttrByLocationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location of the existing customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteUseAttribute"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/get/{location}/taxRate": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns tax rate for a given location",
        "description": "JSON Supported",
        "operationId": "getLocationTaxRateDetailsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location of the existing customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocationTaxRate"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/getSiteUseAttrBySiteUseID/{id}": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns the Site Use Attribute related information for given Site Use ID",
        "description": "JSON Supported",
        "operationId": "getSiteUseAttrBySiteUseIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location of the existing customer.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteUseAttribute"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/getSiteUseBySiteUseID/{id}": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns the Site Use related information for given Site Use ID",
        "description": "JSON Supported",
        "operationId": "getSiteUseBySiteUseIDUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location of the existing customer.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteUse"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/search": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "Returns information for a given location",
        "description": "JSON",
        "operationId": "searchLocationDetailsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of location (starting with).",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pageable",
            "description": "pageable",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Order Details requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/location/siteuse/{customerId}/{storeNumber}": {
      "get": {
        "tags": [
          "location-details-rest-controller"
        ],
        "summary": "getSiteUse",
        "operationId": "getSiteUseUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeNumber",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flux«SiteUse»"
            }
          },
          "400": {
            "description": "Fields are with validation errors",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "401": {
            "description": "Authentication failed - incorrect username and/or password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "424": {
            "description": "Request not processed due to failed dependecy Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Site Use requires authentication - please check username and password",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "404": {
            "description": "Data not found with date range and location for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "406": {
            "description": "Request not acceptable for Order Details",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SiteUse": {
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "fetExempt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "orgId": {
          "type": "number",
          "format": "double"
        },
        "poRequiredflag": {
          "type": "string"
        },
        "primaryDcId": {
          "type": "number",
          "format": "double"
        },
        "primaryFlag": {
          "type": "string"
        },
        "primarySalesRepId": {
          "type": "number",
          "format": "double"
        },
        "siteUseCode": {
          "type": "string"
        },
        "siteUseID": {
          "type": "string"
        },
        "siteUseStatus": {
          "type": "string"
        },
        "storeNumber": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "properties": {
        "codFlag": {
          "type": "string"
        },
        "creditHold": {
          "type": "string"
        },
        "customerAccountProfileID": {
          "type": "integer",
          "format": "int64"
        },
        "customerClass": {
          "type": "string"
        },
        "customerClassName": {
          "type": "string"
        },
        "customerCreationDate": {
          "type": "string",
          "format": "date-time"
        },
        "customerGroup": {
          "type": "string"
        },
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "customerName": {
          "type": "string"
        },
        "customerNumber": {
          "type": "string"
        },
        "customerProfileClass": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "returnPercent": {
          "type": "number",
          "format": "double"
        },
        "standardTerms": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "CustomerRelation": {
      "properties": {
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "customerRelationID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "orgID": {
          "type": "integer",
          "format": "int64"
        },
        "relatedCustomerID": {
          "type": "string"
        },
        "relationType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ModelAndView": {
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "ErrorDetails": {
      "properties": {
        "details": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Flux«ContactInfo»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Flux«SiteUse»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Mono«Location»": {},
    "ContactInfo": {
      "properties": {
        "contactPointID": {
          "type": "integer",
          "format": "int32"
        },
        "contactPointPurpose": {
          "type": "string"
        },
        "contactPointType": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailFormat": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneCountryCode": {
          "type": "string"
        },
        "phoneLineType": {
          "type": "string"
        },
        "primaryFlag": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "LocationTaxRate": {
      "properties": {
        "locationNumber": {
          "type": "string"
        },
        "masterVendor": {
          "type": "string"
        },
        "taxExemptID": {
          "type": "string"
        },
        "taxRateCode": {
          "type": "string"
        }
      }
    },
    "Mono«EcommInfo»": {},
    "EcommInfo": {
      "properties": {
        "atcRqProfile": {
          "type": "string"
        },
        "bibnetPassword": {
          "type": "string"
        },
        "bibnetUsername": {
          "type": "string"
        },
        "displayCobrandComparePrintPage": {
          "type": "integer",
          "format": "int32"
        },
        "displayCobrandHomePage": {
          "type": "integer",
          "format": "int32"
        },
        "displayCobrandLogo": {
          "type": "integer",
          "format": "int32"
        },
        "displayCobrandRetailQuotePage": {
          "type": "integer",
          "format": "int32"
        },
        "dlpVehicleGuideSearchResult": {
          "type": "string"
        },
        "locationConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationConfiguration"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "useDisplayName": {
          "type": "string"
        }
      }
    },
    "Mono«Customer»": {},
    "Flux«SiteUseAttribute»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ModelMap": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Map«string,Link»": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/Link"
      }
    },
    "Flux«LocationTaxRate»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      }
    },
    "LocationConfiguration": {},
    "Flux«CustomerRelation»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Flux«Location»": {
      "properties": {
        "prefetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SiteUseAttribute": {
      "properties": {
        "attrName": {
          "type": "string"
        },
        "attrValue": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "orgID": {
          "type": "integer",
          "format": "int64"
        },
        "siteUseCode": {
          "type": "string"
        },
        "siteUseID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Link": {
      "properties": {
        "href": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    },
    "Mono«SiteUse»": {},
    "Location": {
      "properties": {
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "addressId": {
          "type": "number",
          "format": "double"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "custAcctStatus": {
          "type": "string"
        },
        "customerId": {
          "type": "number",
          "format": "double"
        },
        "fetExemptMasterVendor": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "orgId": {
          "type": "number",
          "format": "double"
        },
        "partySiteStatus": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "postalPlus4Code": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    }
  }
}