---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ServiceName
  labels:
    app: ServiceName
    deployon: "dsr"
spec:
  replicas: replace_replicas
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: ServiceName
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ServiceName
        deployon: "dsr"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ServiceName
              topologyKey: "kubernetes.io/hostname"
      containers:
      - image: image_to_be_deployed
        imagePullPolicy: Always
        name: ServiceName
        ports:
        - containerPort: 9303
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 9303
          initialDelaySeconds: 120
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 9303
          initialDelaySeconds: 60
          periodSeconds: 5
        resources:
          requests:
            memory: "1024Mi"
            cpu: "1"
          limits:
            memory: "1024Mi"
            cpu: "1"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: GENERIC_APIGATEWAY_URL
          valueFrom:
            configMapKeyRef:
              key: apigateway.url
              name: createorder-configmap
        - name: ENV_URL
          valueFrom:
            configMapKeyRef:
              key: replace_logical_env.host.name
              name: createorder-configmap
        - name: AGGREGATOR_URL
          valueFrom:
            configMapKeyRef:
              key: http.aggregator.url
              name: createorder-configmap
        - name: SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kafka.broker.certs
              key: keystore.pwd
        - name: SSL_TRUSTSTORE_LOCATION
          value: /etc/certs/kafka/kafka.broker.keystore.jks
        - name: BOOTSTRAP_SERVER_URL
          valueFrom:
            configMapKeyRef:
              name: createorder-configmap
              key: replace_logical_env.kafka.bootstrap.server.url
        - name: MSA_BASE_PATH
          valueFrom:
            configMapKeyRef:
              key: replace_logical_env.msa.base.path.url
              name: createorder-configmap
        - name: ORDER_ACK_TOPIC
          valueFrom:
            configMapKeyRef:
              key: replace_logical_env.edi.order.ack.kafka.topic
              name: createorder-configmap
        volumeMounts:
            - mountPath: /etc/certs/kafka
              name: certs
              readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: kafka.broker.certs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: SvcName
  labels:
    app: ServiceName
    k8s-app: createorder
spec:
  selector:
    app: ServiceName
  type: ClusterIP
  ports:
  - port: 9303
    name: web
    targetPort: 9303
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler 
metadata: 
  name: createorder
spec: 
  maxReplicas: replace_maxReplicas
  minReplicas: replace_minReplicas 
  scaleTargetRef: 
    apiVersion: apps/v1 
    kind: Deployment 
    name: hpaSrvName
  metrics: 
  - type: Resource 
    resource: 
      name: cpu
      targetAverageUtilization: 70
---
