<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.1</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.atd.microservices.core</groupId>
	<artifactId>createorder</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>createorder</name>
	<description>Project to Create Order</description>
	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>2021.0.3</spring-cloud.version>
		<jib-maven-plugin.version>2.1.0</jib-maven-plugin.version>
		<jacoco.maven.plugin.version>0.8.2</jacoco.maven.plugin.version>
		<jacoco.classRate>1.00</jacoco.classRate>
		<jacoco.methodRate>0.80</jacoco.methodRate>
		<jacoco.lineRate>0.70</jacoco.lineRate>
		<jacoco.branchRate>0.56</jacoco.branchRate>
		<springdoc.version>1.6.15</springdoc.version>
		<mapstruct.version>1.5.1.Final</mapstruct.version>
		<sonar.exclusions>**/exception/*</sonar.exclusions>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor.kafka</groupId>
			<artifactId>reactor-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--	Swagger	-->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-webflux-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<!-- Code Generation -->
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.2.6</version>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<excludes>
							<exclude>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
							</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.maven.plugin.version}</version>
					<executions>
						<execution>
							<id>prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>BUNDLE</element>
										<limits>
											<limit>
												<counter>CLASS</counter>
												<value>COVEREDRATIO</value>
												<minimum>${jacoco.classRate}</minimum>
											</limit>
											<limit>
												<counter>METHOD</counter>
												<value>COVEREDRATIO</value>
												<minimum>${jacoco.methodRate}</minimum>
											</limit>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>${jacoco.lineRate}</minimum>
											</limit>
											<limit>
												<counter>BRANCH</counter>
												<value>COVEREDRATIO</value>
												<minimum>${jacoco.branchRate}</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
                            -Amapstruct.defaultComponentModel=spring
                        </compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<!-- RELEASE_VERSION -->
				<version>6.0.1</version>
				<executions>
					<execution>
						<id>execution-customerlocation-json</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/swagger/customerlocation.json</inputSpec>
							<generatorName>spring</generatorName>
							<skipValidateSpec>true</skipValidateSpec>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<modelPackage>com.atd.domain.microservices.customerlocation</modelPackage>
							<modelsToGenerate>Customer,Location,SiteUse</modelsToGenerate>
							<generateApis>false</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateModelTests>false</generateModelTests>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateSupportingFiles>false</generateSupportingFiles>
						</configuration>
					</execution>
					<execution>
						<id>execution-product-json</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/swagger/product.json</inputSpec>
							<generatorName>spring</generatorName>
							<skipValidateSpec>true</skipValidateSpec>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<modelPackage>com.atd.domain.microservices.product</modelPackage>
							<modelsToGenerate>ItemCrossReferences,Catalog,Product</modelsToGenerate>
							<generateApis>false</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateModelTests>false</generateModelTests>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateSupportingFiles>false</generateSupportingFiles>
						</configuration>
					</execution>
					<execution>
						<id>execution-edi-config-json</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/swagger/edi-config.json</inputSpec>
							<generatorName>spring</generatorName>
							<skipValidateSpec>true</skipValidateSpec>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<modelPackage>com.atd.domain.microservices.ediconfig</modelPackage>
							<generateApis>false</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateModelTests>false</generateModelTests>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateSupportingFiles>false</generateSupportingFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>CLASS</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.classRate}</minimum>
										</limit>
										<limit>
											<counter>METHOD</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.methodRate}</minimum>
										</limit>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.lineRate}</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.branchRate}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>**/*Test.java</includes>
					<excludes>
						<exclude>**/*Application.java</exclude>
						<exclude>**/exception/*.java</exclude>
						<exclude>**/constants/*.java</exclude>
						<exclude>**/domains/*.java</exclude>
						<exclude>**/config/*.java</exclude>
						<exclude>com.atd.microservices.core.createorder.domains.*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>dockerBuild</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<container>
						<jvmFlags>
							<jvmFlag>-XX:+UnlockExperimentalVMOptions</jvmFlag>
							<jvmFlag>-XX:+UseCGroupMemoryLimitForHeap</jvmFlag>
							<jvmFlag>-XX:MaxRAMFraction=2</jvmFlag>
							<jvmFlag>-XshowSettings:vm</jvmFlag>
							<jvmFlag>-Dapigateway.url=${GENERIC_APIGATEWAY_URL}</jvmFlag>
							<jvmFlag>-Denv.host.url=${ENV_URL}</jvmFlag>
							<jvmFlag>-Dorder.ack.topic=${ORDER_ACK_TOPIC}</jvmFlag>
							<jvmFlag>-Dkafka.truststore.location=${SSL_TRUSTSTORE_LOCATION}</jvmFlag>
							<jvmFlag>-Dkafka.truststore.password=${SSL_TRUSTSTORE_PASSWORD}</jvmFlag>
							<jvmFlag>-Dkafka.bootstrap.server.url=${BOOTSTRAP_SERVER_URL}</jvmFlag>
							<jvmFlag>-Dmsa.cluster.base.url=${MSA_BASE_PATH}</jvmFlag>
						</jvmFlags>
						<ports>
							<port>9303</port>
						</ports>
					</container>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
